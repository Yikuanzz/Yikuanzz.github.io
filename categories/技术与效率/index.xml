<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术与效率 on Yikuanzz</title>
    <link>https://yikuanzz.github.io/categories/%E6%8A%80%E6%9C%AF%E4%B8%8E%E6%95%88%E7%8E%87/</link>
    <description>Recent content in 技术与效率 on Yikuanzz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Apr 2024 10:10:04 +0800</lastBuildDate>
    <atom:link href="https://yikuanzz.github.io/categories/%E6%8A%80%E6%9C%AF%E4%B8%8E%E6%95%88%E7%8E%87/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>消息队列学习</title>
      <link>https://yikuanzz.github.io/2024/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Fri, 19 Apr 2024 10:10:04 +0800</pubDate>
      <guid>https://yikuanzz.github.io/2024/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%AD%A6%E4%B9%A0/</guid>
      <description>消息队列介绍 消息总线（Message Queue） ，是一种跨进程的通信机制，就是用于在应用程序之间传递消息的中间件。它把消息存储在一个队列中，</description>
    </item>
    <item>
      <title>网络数通入门</title>
      <link>https://yikuanzz.github.io/2024/%E7%BD%91%E7%BB%9C%E6%95%B0%E9%80%9A%E5%85%A5%E9%97%A8/</link>
      <pubDate>Thu, 18 Apr 2024 20:05:05 +0800</pubDate>
      <guid>https://yikuanzz.github.io/2024/%E7%BD%91%E7%BB%9C%E6%95%B0%E9%80%9A%E5%85%A5%E9%97%A8/</guid>
      <description>基础技术 问题： 1、电脑浏览器是如何打开百度的？ 2、游戏客户端是如何连接服务器的？ 3、购物节，电商服务器是如何顶住压力的？ 网络设备 交换机：电脑</description>
    </item>
    <item>
      <title>RPC 学习</title>
      <link>https://yikuanzz.github.io/2024/rpc-%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Tue, 16 Apr 2024 19:31:08 +0800</pubDate>
      <guid>https://yikuanzz.github.io/2024/rpc-%E5%AD%A6%E4%B9%A0/</guid>
      <description>RPC 简单介绍 RPC（Remote Procedure Call） 是远程过程调用协议。RPC协议假定某些传输协议的存在，如TCP或UDP，为通信程序之间携带信息数据</description>
    </item>
    <item>
      <title>跨域问题</title>
      <link>https://yikuanzz.github.io/2024/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 15 Apr 2024 01:49:05 +0800</pubDate>
      <guid>https://yikuanzz.github.io/2024/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</guid>
      <description>跨域 跨域问题是前端开发常见的一个问题，就是当一个网页或脚本试图请求另一个来源（域名、协议或端口）的资源时会产生的问题。 原因是：浏览的同源策略</description>
    </item>
    <item>
      <title>程序执行时的栈和堆</title>
      <link>https://yikuanzz.github.io/2024/%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E6%97%B6%E7%9A%84%E6%A0%88%E5%92%8C%E5%A0%86/</link>
      <pubDate>Fri, 12 Apr 2024 18:57:08 +0800</pubDate>
      <guid>https://yikuanzz.github.io/2024/%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E6%97%B6%E7%9A%84%E6%A0%88%E5%92%8C%E5%A0%86/</guid>
      <description>在 C语言中，程序运行时会存在 栈 和 堆 两种不同的内存分配方式。 接下来，我们从 内存分配方式 、内存地址增长 和 碎片 三个方面来对比 栈 和 堆。 内存分配方式 栈</description>
    </item>
    <item>
      <title>浅聊操作系统</title>
      <link>https://yikuanzz.github.io/2024/%E6%B5%85%E8%81%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Tue, 26 Mar 2024 20:28:49 +0800</pubDate>
      <guid>https://yikuanzz.github.io/2024/%E6%B5%85%E8%81%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid>
      <description>操作系统简要 操作系统（Operating System，简称 OS）是管理计算机硬件与软件资源的程序，是计算机的基石。 操作系统本质上是一个运行在</description>
    </item>
    <item>
      <title>计组-计算机算术</title>
      <link>https://yikuanzz.github.io/2024/%E8%AE%A1%E7%BB%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%AE%97%E6%9C%AF/</link>
      <pubDate>Mon, 25 Mar 2024 10:55:32 +0800</pubDate>
      <guid>https://yikuanzz.github.io/2024/%E8%AE%A1%E7%BB%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%AE%97%E6%9C%AF/</guid>
      <description>计算机内可以存储各种各样的数据，例如：文本数据、图片数据、音频数据、视频数据等等。 这些数据都会以 位（bit，或比特） 的形式储存在计算机内，并</description>
    </item>
    <item>
      <title>开发技术和模式</title>
      <link>https://yikuanzz.github.io/2024/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E5%92%8C%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 23 Mar 2024 20:46:07 +0800</pubDate>
      <guid>https://yikuanzz.github.io/2024/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E5%92%8C%E6%A8%A1%E5%BC%8F/</guid>
      <description>开发技术革新 CGI 通用网关接口 通用网关接口（Common Gateway Interface, CGI） 是一种Web服务器与外部应用程序之间进行数据交互的标准协议。 背景： 早期的We</description>
    </item>
  </channel>
</rss>
